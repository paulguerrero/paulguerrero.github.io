user  root;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;
    client_max_body_size 100000M;
    
    # a simple file browser
    server {
        listen 5001;

        root /home/guerrero;

        location / {
            autoindex on;
        }
    }

    server {
        listen 6006;

        # Reverse proxy addresses for custom webservers. These do not rewrite
        # URLs. The local server listening on port 500* needs to handle
        # absolute URLs of the form: ^/Int-.*/tensorboard/server*/<path>.
        # This is useful for instance for Tensorboard, Visdom or Streamlit,
        # which fetch their static assets according to their absolute path,
        # so they need to be passed a `base_url`. Sensei sets an environment
        # variable for the path prefix:
        # $tensorboard_base_url=^/Int-.*/tensorboard (if was originally hardcoded for "tensorboard").
        # To launch a Visdom server on server0 for example, run:
        # `python -m visdom.server -p 5000 -base_url=$tensorboard_base_url/server0`
        location ~ ^/Int-.*/tensorboard/jupyter {
            proxy_pass http://localhost:5000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            # Explicit upgrade for WebSocket: https://www.nginx.com/blog/websocket-nginx/
            proxy_set_header Connection $connection_upgrade;
        }

        location ~ ^/Int-.*/tensorboard/files {
            proxy_pass http://localhost:5001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            # Explicit upgrade for WebSocket: https://www.nginx.com/blog/websocket-nginx/
            proxy_set_header Connection $connection_upgrade;
        }

        location ~ ^/Int-.*/tensorboard/server2 {
            proxy_pass http://localhost:5002;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            # Explicit upgrade for WebSocket: https://www.nginx.com/blog/websocket-nginx/
            proxy_set_header Connection "Upgrade";

        }

        # In case your webserver handles relative adresses, you can use one of
        # the following proxies, which rewrite URLs.
        # The external URL is: ^/Int-.*/tensorboard/relative_server*/<path>
        # For example, a simple python server that shows the files in the current
        # directory can be started as:
        #   `python -m http.server 4000`
        # To connect to the server, navigate to `Int-.*/tensorboard/relative_server0/<path>`
        location ~ ^/Int-.*/tensorboard/relative_server0 {
            proxy_pass http://localhost:4000;
            proxy_http_version 1.1;
            rewrite ^/Int-.*/tensorboard/relative_server0(.*) /$1 break;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        location ~ ^/Int-.*/tensorboard/relative_server1 {
            proxy_pass http://localhost:4001;
            proxy_http_version 1.1;
            rewrite ^/Int-.*/tensorboard/relative_server1(.*) /$1 break;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        location ~ ^/Int-.*/tensorboard/relative_server2 {
            proxy_pass http://localhost:4002;
            proxy_http_version 1.1;
            rewrite ^/Int-.*/tensorboard/relative_server2(.*) /$1 break;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        location ~ ^/Int-.*/tensorboard/ssh/ {
            rewrite ^/Int-.*/tensorboard/ssh/(.*) /$1 break;

            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }
    }
}
